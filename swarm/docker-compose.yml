version: '3'

services:

  ###
  ### INFRASTRUCTURE
  ###

  elasticsearch5:
    image: 'elasticsearch:5'
    command: [ elasticsearch, -E, network.host=0.0.0.0, -E, discovery.zen.ping.unicast.hosts=elasticsearch5, -E, discovery.zen.minimum_master_nodes=1, -E, cluster.name=swarm ]
    environment:
      ES_JAVA_OPTS: -Xms1g -Xmx1g
    deploy:
      mode: 'global'
      placement:
        constraints: [node.labels.elasticsearch5==true]

  mongo3:
    image: 'mongo:3'
    ports:
      - '27017:27017'
    deploy:
      placement:
        constraints: [node.labels.mongo3==true]

  nginx:
    image: 'nginx:1'
    ports:
        - '9200:9200'
    command: |
      /bin/bash -c "echo '
      server {
        listen 9200;
        add_header X-Frame-Options "SAMEORIGIN";
        location / {
            proxy_pass http://elasticsearch5:9200;
            proxy_http_version 1.1;
            proxy_set_header Connection keep-alive;
            proxy_set_header Upgrade $$http_upgrade;
            proxy_set_header Host $$host;
            proxy_set_header X-Real-IP $$remote_addr;
            proxy_cache_bypass $$http_upgrade;
        }
      }' | tee /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    deploy:
      mode: 'global'
      placement:
        constraints: [node.labels.elasticsearch5==true]

  visualizer:
    image: manomarks/visualizer
    ports:
      - '5000:8080'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    deploy:
      placement:
        constraints: [node.role==manager]

  ###
  ### SERVICE MANAGER
  ###

  # service-manager:
  #   build: service-manager
  #   image: bmancini55/swarm-service-manager
  #   volumes:
  #     - /var/run/docker.sock:/tmp/docker.sock
  #   ports:
  #     - '4111:4111'
  #   deploy:
  #     mode: 'global'
  #     placement:
  #       constraints: [node.labels.services==true]


  ###
  ### SERVICES
  ###

  # document-service:
  #   build: document-service


  # indexing-service:
  #   build: indexing

